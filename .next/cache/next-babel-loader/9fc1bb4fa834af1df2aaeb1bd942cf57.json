{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/piggy/Desktop/app/phongtruyenthong/pages/components/ListImage.js\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport { LOCALHOST, LINK_All } from \"../constant/URL\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\n\nclass ListImage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      listArr: null,\n      item0: this.props.id,\n      item1: null,\n      item_1: null\n    });\n\n    _defineProperty(this, \"PostLink\", id => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: \"/phongtruyenthong/[id]\",\n      as: `/phongtruyenthong/${id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"\\u1EA2nh: \", id))));\n\n    _defineProperty(this, \"fetchData\", () => {\n      console.log(this.props.id);\n      fetch(LOCALHOST + LINK_All).then(response => response.json()).then(data => {\n        console.log(data);\n\n        if (data.status == \"success\") {\n          const temp = [];\n          data.data.map(item => {\n            temp.push(item.image_id);\n          });\n          const index_of_props = temp.findIndex(x => x == this.props.id);\n          var item1 = null;\n          var item_1 = null;\n\n          if (index_of_props == 0) {\n            item1 = index_of_props + 1;\n            item_1 = null;\n          } else if (index_of_props == temp.length - 1) {\n            item1 = null;\n            item_1 = index_of_props - 1;\n          } else {\n            item1 = index_of_props + 1;\n            item_1 = index_of_props - 1;\n          }\n\n          console.log(index_of_props);\n          this.setState({\n            listArr: temp,\n            item1: temp[item1],\n            item_1: temp[item_1],\n            item0: this.props.id\n          });\n        }\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  render() {\n    if (this.props.id != this.state.item0) {\n      this.fetchData();\n    }\n\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Danh s\\xE1ch c\\xE1c \\u1EA3nh\", this.state.item_1 != null ? this.PostLink(this.state.item_1) : null, this.state.item1 != null ? this.PostLink(this.state.item1) : null);\n  }\n\n}\n\nexport default ListImage;","map":{"version":3,"sources":["/home/piggy/Desktop/app/phongtruyenthong/pages/components/ListImage.js"],"names":["Component","fetch","LOCALHOST","LINK_All","Link","useRouter","ListImage","listArr","item0","props","id","item1","item_1","console","log","then","response","json","data","status","temp","map","item","push","image_id","index_of_props","findIndex","x","length","setState","componentDidMount","fetchData","render","state","PostLink"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport { LOCALHOST, LINK_All } from \"../constant/URL\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\n\nclass ListImage extends Component {\n  state = {\n    listArr: null,\n    item0: this.props.id,\n    item1: null,\n    item_1: null\n  };\n\n  PostLink = id => (\n    <li>\n      <Link href=\"/phongtruyenthong/[id]\" as={`/phongtruyenthong/${id}`}>\n        <a>Ảnh: {id}</a>\n      </Link>\n    </li>\n  );\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = () => {\n    console.log(this.props.id);\n\n    fetch(LOCALHOST + LINK_All)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        if (data.status == \"success\") {\n          const temp = [];\n          data.data.map(item => {\n            temp.push(item.image_id);\n          });\n\n          const index_of_props = temp.findIndex(x => x == this.props.id);\n          var item1 = null;\n\n          var item_1 = null;\n\n          if (index_of_props == 0) {\n            item1 = index_of_props + 1;\n            item_1 = null;\n          } else if (index_of_props == temp.length - 1) {\n            item1 = null;\n            item_1 = index_of_props - 1;\n          } else {\n            item1 = index_of_props + 1;\n            item_1 = index_of_props - 1;\n          }\n\n          console.log(index_of_props);\n\n          this.setState({\n            listArr: temp,\n            item1: temp[item1],\n            item_1: temp[item_1],\n            item0: this.props.id\n          });\n        }\n      });\n  };\n\n  render() {\n    if (this.props.id != this.state.item0) {\n      this.fetchData();\n    }\n\n    return (\n      <p>\n        Danh sách các ảnh\n        {this.state.item_1 != null ? this.PostLink(this.state.item_1) : null}\n        {this.state.item1 != null ? this.PostLink(this.state.item1) : null}\n      </p>\n    );\n  }\n}\n\nexport default ListImage;\n"]},"metadata":{},"sourceType":"module"}